// Code generated by MockGen. DO NOT EDIT.
// Source: dbcall/dbOperations.go

// Package dbcall is a generated GoMock package.
package dbcall

import (
	reflect "reflect"

	models "example.com/microservice/models"
	gomock "github.com/golang/mock/gomock"
)

// MockDbOperation is a mock of DbOperation interface.
type MockDbOperation struct {
	ctrl     *gomock.Controller
	recorder *MockDbOperationMockRecorder
}

// MockDbOperationMockRecorder is the mock recorder for MockDbOperation.
type MockDbOperationMockRecorder struct {
	mock *MockDbOperation
}

// NewMockDbOperation creates a new mock instance.
func NewMockDbOperation(ctrl *gomock.Controller) *MockDbOperation {
	mock := &MockDbOperation{ctrl: ctrl}
	mock.recorder = &MockDbOperationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDbOperation) EXPECT() *MockDbOperationMockRecorder {
	return m.recorder
}

// CreateProduct mocks base method.
func (m *MockDbOperation) CreateProduct(arg0 models.Product) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateProduct", arg0)
}

// CreateProduct indicates an expected call of CreateProduct.
func (mr *MockDbOperationMockRecorder) CreateProduct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProduct", reflect.TypeOf((*MockDbOperation)(nil).CreateProduct), arg0)
}

// FetchProductById mocks base method.
func (m *MockDbOperation) FetchProductById(arg0 int) models.Product {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchProductById", arg0)
	ret0, _ := ret[0].(models.Product)
	return ret0
}

// FetchProductById indicates an expected call of FetchProductById.
func (mr *MockDbOperationMockRecorder) FetchProductById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchProductById", reflect.TypeOf((*MockDbOperation)(nil).FetchProductById), arg0)
}

// FetchProducts mocks base method.
func (m *MockDbOperation) FetchProducts() []models.Product {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchProducts")
	ret0, _ := ret[0].([]models.Product)
	return ret0
}

// FetchProducts indicates an expected call of FetchProducts.
func (mr *MockDbOperationMockRecorder) FetchProducts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchProducts", reflect.TypeOf((*MockDbOperation)(nil).FetchProducts))
}
